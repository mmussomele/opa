// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opa.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	opa.proto

It has these top-level messages:
	V0DataPostRequest
	V0DataPostResponse
	V1DataPutRequest
	V1DataPutResponse
	V1DataGetRequest
	V1DataGetResponse
	V1DataPatchRequest
	V1DataPatchResponse
	V1DataPostRequest
	V1DataPostResponse
	V1QueryGetRequest
	V1QueryGetResponse
	V1PoliciesPutRequest
	V1PoliciesPutResponse
	V1PoliciesListRequest
	V1PoliciesListResponse
	V1PoliciesGetRequest
	V1PoliciesGetResponse
	V1PoliciesDeleteRequest
	V1PoliciesDeleteResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Explain int32

const (
	Explain_NONE  Explain = 0
	Explain_FULL  Explain = 1
	Explain_TRUTH Explain = 2
)

var Explain_name = map[int32]string{
	0: "NONE",
	1: "FULL",
	2: "TRUTH",
}
var Explain_value = map[string]int32{
	"NONE":  0,
	"FULL":  1,
	"TRUTH": 2,
}

func (x Explain) String() string {
	return proto1.EnumName(Explain_name, int32(x))
}
func (Explain) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type V0DataPostRequest struct {
	Path   string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Input  string `protobuf:"bytes,2,opt,name=input" json:"input,omitempty"`
	Pretty bool   `protobuf:"varint,3,opt,name=pretty" json:"pretty,omitempty"`
}

func (m *V0DataPostRequest) Reset()                    { *m = V0DataPostRequest{} }
func (m *V0DataPostRequest) String() string            { return proto1.CompactTextString(m) }
func (*V0DataPostRequest) ProtoMessage()               {}
func (*V0DataPostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *V0DataPostRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *V0DataPostRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *V0DataPostRequest) GetPretty() bool {
	if m != nil {
		return m.Pretty
	}
	return false
}

type V0DataPostResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *V0DataPostResponse) Reset()                    { *m = V0DataPostResponse{} }
func (m *V0DataPostResponse) String() string            { return proto1.CompactTextString(m) }
func (*V0DataPostResponse) ProtoMessage()               {}
func (*V0DataPostResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *V0DataPostResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *V0DataPostResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type V1DataPutRequest struct {
	Path        string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Contents    string `protobuf:"bytes,2,opt,name=contents" json:"contents,omitempty"`
	IfNoneMatch string `protobuf:"bytes,3,opt,name=if_none_match,json=ifNoneMatch" json:"if_none_match,omitempty"`
}

func (m *V1DataPutRequest) Reset()                    { *m = V1DataPutRequest{} }
func (m *V1DataPutRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1DataPutRequest) ProtoMessage()               {}
func (*V1DataPutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *V1DataPutRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *V1DataPutRequest) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *V1DataPutRequest) GetIfNoneMatch() string {
	if m != nil {
		return m.IfNoneMatch
	}
	return ""
}

type V1DataPutResponse struct {
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
}

func (m *V1DataPutResponse) Reset()                    { *m = V1DataPutResponse{} }
func (m *V1DataPutResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1DataPutResponse) ProtoMessage()               {}
func (*V1DataPutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *V1DataPutResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type V1DataGetRequest struct {
	Path    string   `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Pretty  bool     `protobuf:"varint,2,opt,name=pretty" json:"pretty,omitempty"`
	Metrics bool     `protobuf:"varint,3,opt,name=metrics" json:"metrics,omitempty"`
	Explain Explain  `protobuf:"varint,4,opt,name=explain,enum=proto.Explain" json:"explain,omitempty"`
	Input   []string `protobuf:"bytes,5,rep,name=input" json:"input,omitempty"`
}

func (m *V1DataGetRequest) Reset()                    { *m = V1DataGetRequest{} }
func (m *V1DataGetRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1DataGetRequest) ProtoMessage()               {}
func (*V1DataGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *V1DataGetRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *V1DataGetRequest) GetPretty() bool {
	if m != nil {
		return m.Pretty
	}
	return false
}

func (m *V1DataGetRequest) GetMetrics() bool {
	if m != nil {
		return m.Metrics
	}
	return false
}

func (m *V1DataGetRequest) GetExplain() Explain {
	if m != nil {
		return m.Explain
	}
	return Explain_NONE
}

func (m *V1DataGetRequest) GetInput() []string {
	if m != nil {
		return m.Input
	}
	return nil
}

type V1DataGetResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *V1DataGetResponse) Reset()                    { *m = V1DataGetResponse{} }
func (m *V1DataGetResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1DataGetResponse) ProtoMessage()               {}
func (*V1DataGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *V1DataGetResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *V1DataGetResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type V1DataPatchRequest struct {
	Path  string   `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Patch []string `protobuf:"bytes,2,rep,name=patch" json:"patch,omitempty"`
}

func (m *V1DataPatchRequest) Reset()                    { *m = V1DataPatchRequest{} }
func (m *V1DataPatchRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1DataPatchRequest) ProtoMessage()               {}
func (*V1DataPatchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *V1DataPatchRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *V1DataPatchRequest) GetPatch() []string {
	if m != nil {
		return m.Patch
	}
	return nil
}

type V1DataPatchResponse struct {
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
}

func (m *V1DataPatchResponse) Reset()                    { *m = V1DataPatchResponse{} }
func (m *V1DataPatchResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1DataPatchResponse) ProtoMessage()               {}
func (*V1DataPatchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *V1DataPatchResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type V1DataPostRequest struct {
	Path    string  `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Input   string  `protobuf:"bytes,2,opt,name=input" json:"input,omitempty"`
	Pretty  bool    `protobuf:"varint,3,opt,name=pretty" json:"pretty,omitempty"`
	Metrics bool    `protobuf:"varint,4,opt,name=metrics" json:"metrics,omitempty"`
	Explain Explain `protobuf:"varint,5,opt,name=explain,enum=proto.Explain" json:"explain,omitempty"`
}

func (m *V1DataPostRequest) Reset()                    { *m = V1DataPostRequest{} }
func (m *V1DataPostRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1DataPostRequest) ProtoMessage()               {}
func (*V1DataPostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *V1DataPostRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *V1DataPostRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *V1DataPostRequest) GetPretty() bool {
	if m != nil {
		return m.Pretty
	}
	return false
}

func (m *V1DataPostRequest) GetMetrics() bool {
	if m != nil {
		return m.Metrics
	}
	return false
}

func (m *V1DataPostRequest) GetExplain() Explain {
	if m != nil {
		return m.Explain
	}
	return Explain_NONE
}

type V1DataPostResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *V1DataPostResponse) Reset()                    { *m = V1DataPostResponse{} }
func (m *V1DataPostResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1DataPostResponse) ProtoMessage()               {}
func (*V1DataPostResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *V1DataPostResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *V1DataPostResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type V1QueryGetRequest struct {
	Query   string  `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Pretty  bool    `protobuf:"varint,2,opt,name=pretty" json:"pretty,omitempty"`
	Metrics bool    `protobuf:"varint,3,opt,name=metrics" json:"metrics,omitempty"`
	Explain Explain `protobuf:"varint,4,opt,name=explain,enum=proto.Explain" json:"explain,omitempty"`
}

func (m *V1QueryGetRequest) Reset()                    { *m = V1QueryGetRequest{} }
func (m *V1QueryGetRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1QueryGetRequest) ProtoMessage()               {}
func (*V1QueryGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *V1QueryGetRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *V1QueryGetRequest) GetPretty() bool {
	if m != nil {
		return m.Pretty
	}
	return false
}

func (m *V1QueryGetRequest) GetMetrics() bool {
	if m != nil {
		return m.Metrics
	}
	return false
}

func (m *V1QueryGetRequest) GetExplain() Explain {
	if m != nil {
		return m.Explain
	}
	return Explain_NONE
}

type V1QueryGetResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *V1QueryGetResponse) Reset()                    { *m = V1QueryGetResponse{} }
func (m *V1QueryGetResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1QueryGetResponse) ProtoMessage()               {}
func (*V1QueryGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *V1QueryGetResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *V1QueryGetResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type V1PoliciesPutRequest struct {
	Path   string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Policy string `protobuf:"bytes,2,opt,name=policy" json:"policy,omitempty"`
}

func (m *V1PoliciesPutRequest) Reset()                    { *m = V1PoliciesPutRequest{} }
func (m *V1PoliciesPutRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1PoliciesPutRequest) ProtoMessage()               {}
func (*V1PoliciesPutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *V1PoliciesPutRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *V1PoliciesPutRequest) GetPolicy() string {
	if m != nil {
		return m.Policy
	}
	return ""
}

type V1PoliciesPutResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *V1PoliciesPutResponse) Reset()                    { *m = V1PoliciesPutResponse{} }
func (m *V1PoliciesPutResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1PoliciesPutResponse) ProtoMessage()               {}
func (*V1PoliciesPutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *V1PoliciesPutResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *V1PoliciesPutResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type V1PoliciesListRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *V1PoliciesListRequest) Reset()                    { *m = V1PoliciesListRequest{} }
func (m *V1PoliciesListRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1PoliciesListRequest) ProtoMessage()               {}
func (*V1PoliciesListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *V1PoliciesListRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type V1PoliciesListResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *V1PoliciesListResponse) Reset()                    { *m = V1PoliciesListResponse{} }
func (m *V1PoliciesListResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1PoliciesListResponse) ProtoMessage()               {}
func (*V1PoliciesListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *V1PoliciesListResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *V1PoliciesListResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type V1PoliciesGetRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *V1PoliciesGetRequest) Reset()                    { *m = V1PoliciesGetRequest{} }
func (m *V1PoliciesGetRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1PoliciesGetRequest) ProtoMessage()               {}
func (*V1PoliciesGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *V1PoliciesGetRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type V1PoliciesGetResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *V1PoliciesGetResponse) Reset()                    { *m = V1PoliciesGetResponse{} }
func (m *V1PoliciesGetResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1PoliciesGetResponse) ProtoMessage()               {}
func (*V1PoliciesGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *V1PoliciesGetResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *V1PoliciesGetResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type V1PoliciesDeleteRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *V1PoliciesDeleteRequest) Reset()                    { *m = V1PoliciesDeleteRequest{} }
func (m *V1PoliciesDeleteRequest) String() string            { return proto1.CompactTextString(m) }
func (*V1PoliciesDeleteRequest) ProtoMessage()               {}
func (*V1PoliciesDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *V1PoliciesDeleteRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type V1PoliciesDeleteResponse struct {
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
}

func (m *V1PoliciesDeleteResponse) Reset()                    { *m = V1PoliciesDeleteResponse{} }
func (m *V1PoliciesDeleteResponse) String() string            { return proto1.CompactTextString(m) }
func (*V1PoliciesDeleteResponse) ProtoMessage()               {}
func (*V1PoliciesDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *V1PoliciesDeleteResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto1.RegisterType((*V0DataPostRequest)(nil), "proto.V0DataPostRequest")
	proto1.RegisterType((*V0DataPostResponse)(nil), "proto.V0DataPostResponse")
	proto1.RegisterType((*V1DataPutRequest)(nil), "proto.V1DataPutRequest")
	proto1.RegisterType((*V1DataPutResponse)(nil), "proto.V1DataPutResponse")
	proto1.RegisterType((*V1DataGetRequest)(nil), "proto.V1DataGetRequest")
	proto1.RegisterType((*V1DataGetResponse)(nil), "proto.V1DataGetResponse")
	proto1.RegisterType((*V1DataPatchRequest)(nil), "proto.V1DataPatchRequest")
	proto1.RegisterType((*V1DataPatchResponse)(nil), "proto.V1DataPatchResponse")
	proto1.RegisterType((*V1DataPostRequest)(nil), "proto.V1DataPostRequest")
	proto1.RegisterType((*V1DataPostResponse)(nil), "proto.V1DataPostResponse")
	proto1.RegisterType((*V1QueryGetRequest)(nil), "proto.V1QueryGetRequest")
	proto1.RegisterType((*V1QueryGetResponse)(nil), "proto.V1QueryGetResponse")
	proto1.RegisterType((*V1PoliciesPutRequest)(nil), "proto.V1PoliciesPutRequest")
	proto1.RegisterType((*V1PoliciesPutResponse)(nil), "proto.V1PoliciesPutResponse")
	proto1.RegisterType((*V1PoliciesListRequest)(nil), "proto.V1PoliciesListRequest")
	proto1.RegisterType((*V1PoliciesListResponse)(nil), "proto.V1PoliciesListResponse")
	proto1.RegisterType((*V1PoliciesGetRequest)(nil), "proto.V1PoliciesGetRequest")
	proto1.RegisterType((*V1PoliciesGetResponse)(nil), "proto.V1PoliciesGetResponse")
	proto1.RegisterType((*V1PoliciesDeleteRequest)(nil), "proto.V1PoliciesDeleteRequest")
	proto1.RegisterType((*V1PoliciesDeleteResponse)(nil), "proto.V1PoliciesDeleteResponse")
	proto1.RegisterEnum("proto.Explain", Explain_name, Explain_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OPA service

type OPAClient interface {
	V0DataPost(ctx context.Context, in *V0DataPostRequest, opts ...grpc.CallOption) (*V0DataPostResponse, error)
	V1DataPut(ctx context.Context, in *V1DataPutRequest, opts ...grpc.CallOption) (*V1DataPutResponse, error)
	V1DataGet(ctx context.Context, in *V1DataGetRequest, opts ...grpc.CallOption) (*V1DataGetResponse, error)
	V1DataPatch(ctx context.Context, in *V1DataPatchRequest, opts ...grpc.CallOption) (*V1DataPatchResponse, error)
	V1DataPost(ctx context.Context, in *V1DataPostRequest, opts ...grpc.CallOption) (*V1DataPostResponse, error)
	V1QueryGet(ctx context.Context, in *V1QueryGetRequest, opts ...grpc.CallOption) (*V1QueryGetResponse, error)
	V1PoliciesPut(ctx context.Context, in *V1PoliciesPutRequest, opts ...grpc.CallOption) (*V1PoliciesPutResponse, error)
	V1PoliciesList(ctx context.Context, in *V1PoliciesListRequest, opts ...grpc.CallOption) (*V1PoliciesListResponse, error)
	V1PoliciesGet(ctx context.Context, in *V1PoliciesGetRequest, opts ...grpc.CallOption) (*V1PoliciesGetResponse, error)
	V1PoliciesDelete(ctx context.Context, in *V1PoliciesDeleteRequest, opts ...grpc.CallOption) (*V1PoliciesDeleteResponse, error)
}

type oPAClient struct {
	cc *grpc.ClientConn
}

func NewOPAClient(cc *grpc.ClientConn) OPAClient {
	return &oPAClient{cc}
}

func (c *oPAClient) V0DataPost(ctx context.Context, in *V0DataPostRequest, opts ...grpc.CallOption) (*V0DataPostResponse, error) {
	out := new(V0DataPostResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V0DataPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1DataPut(ctx context.Context, in *V1DataPutRequest, opts ...grpc.CallOption) (*V1DataPutResponse, error) {
	out := new(V1DataPutResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1DataPut", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1DataGet(ctx context.Context, in *V1DataGetRequest, opts ...grpc.CallOption) (*V1DataGetResponse, error) {
	out := new(V1DataGetResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1DataGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1DataPatch(ctx context.Context, in *V1DataPatchRequest, opts ...grpc.CallOption) (*V1DataPatchResponse, error) {
	out := new(V1DataPatchResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1DataPatch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1DataPost(ctx context.Context, in *V1DataPostRequest, opts ...grpc.CallOption) (*V1DataPostResponse, error) {
	out := new(V1DataPostResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1DataPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1QueryGet(ctx context.Context, in *V1QueryGetRequest, opts ...grpc.CallOption) (*V1QueryGetResponse, error) {
	out := new(V1QueryGetResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1QueryGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1PoliciesPut(ctx context.Context, in *V1PoliciesPutRequest, opts ...grpc.CallOption) (*V1PoliciesPutResponse, error) {
	out := new(V1PoliciesPutResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1PoliciesPut", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1PoliciesList(ctx context.Context, in *V1PoliciesListRequest, opts ...grpc.CallOption) (*V1PoliciesListResponse, error) {
	out := new(V1PoliciesListResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1PoliciesList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1PoliciesGet(ctx context.Context, in *V1PoliciesGetRequest, opts ...grpc.CallOption) (*V1PoliciesGetResponse, error) {
	out := new(V1PoliciesGetResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1PoliciesGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oPAClient) V1PoliciesDelete(ctx context.Context, in *V1PoliciesDeleteRequest, opts ...grpc.CallOption) (*V1PoliciesDeleteResponse, error) {
	out := new(V1PoliciesDeleteResponse)
	err := grpc.Invoke(ctx, "/proto.OPA/V1PoliciesDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OPA service

type OPAServer interface {
	V0DataPost(context.Context, *V0DataPostRequest) (*V0DataPostResponse, error)
	V1DataPut(context.Context, *V1DataPutRequest) (*V1DataPutResponse, error)
	V1DataGet(context.Context, *V1DataGetRequest) (*V1DataGetResponse, error)
	V1DataPatch(context.Context, *V1DataPatchRequest) (*V1DataPatchResponse, error)
	V1DataPost(context.Context, *V1DataPostRequest) (*V1DataPostResponse, error)
	V1QueryGet(context.Context, *V1QueryGetRequest) (*V1QueryGetResponse, error)
	V1PoliciesPut(context.Context, *V1PoliciesPutRequest) (*V1PoliciesPutResponse, error)
	V1PoliciesList(context.Context, *V1PoliciesListRequest) (*V1PoliciesListResponse, error)
	V1PoliciesGet(context.Context, *V1PoliciesGetRequest) (*V1PoliciesGetResponse, error)
	V1PoliciesDelete(context.Context, *V1PoliciesDeleteRequest) (*V1PoliciesDeleteResponse, error)
}

func RegisterOPAServer(s *grpc.Server, srv OPAServer) {
	s.RegisterService(&_OPA_serviceDesc, srv)
}

func _OPA_V0DataPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V0DataPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V0DataPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V0DataPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V0DataPost(ctx, req.(*V0DataPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1DataPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1DataPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1DataPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1DataPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1DataPut(ctx, req.(*V1DataPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1DataGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1DataGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1DataGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1DataGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1DataGet(ctx, req.(*V1DataGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1DataPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1DataPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1DataPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1DataPatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1DataPatch(ctx, req.(*V1DataPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1DataPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1DataPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1DataPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1DataPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1DataPost(ctx, req.(*V1DataPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1QueryGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1QueryGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1QueryGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1QueryGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1QueryGet(ctx, req.(*V1QueryGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1PoliciesPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1PoliciesPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1PoliciesPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1PoliciesPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1PoliciesPut(ctx, req.(*V1PoliciesPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1PoliciesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1PoliciesListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1PoliciesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1PoliciesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1PoliciesList(ctx, req.(*V1PoliciesListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1PoliciesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1PoliciesGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1PoliciesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1PoliciesGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1PoliciesGet(ctx, req.(*V1PoliciesGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OPA_V1PoliciesDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(V1PoliciesDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OPAServer).V1PoliciesDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OPA/V1PoliciesDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OPAServer).V1PoliciesDelete(ctx, req.(*V1PoliciesDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OPA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.OPA",
	HandlerType: (*OPAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "V0DataPost",
			Handler:    _OPA_V0DataPost_Handler,
		},
		{
			MethodName: "V1DataPut",
			Handler:    _OPA_V1DataPut_Handler,
		},
		{
			MethodName: "V1DataGet",
			Handler:    _OPA_V1DataGet_Handler,
		},
		{
			MethodName: "V1DataPatch",
			Handler:    _OPA_V1DataPatch_Handler,
		},
		{
			MethodName: "V1DataPost",
			Handler:    _OPA_V1DataPost_Handler,
		},
		{
			MethodName: "V1QueryGet",
			Handler:    _OPA_V1QueryGet_Handler,
		},
		{
			MethodName: "V1PoliciesPut",
			Handler:    _OPA_V1PoliciesPut_Handler,
		},
		{
			MethodName: "V1PoliciesList",
			Handler:    _OPA_V1PoliciesList_Handler,
		},
		{
			MethodName: "V1PoliciesGet",
			Handler:    _OPA_V1PoliciesGet_Handler,
		},
		{
			MethodName: "V1PoliciesDelete",
			Handler:    _OPA_V1PoliciesDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "opa.proto",
}

func init() { proto1.RegisterFile("opa.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x61, 0x6f, 0xd3, 0x3c,
	0x10, 0x7e, 0xd3, 0x36, 0x6b, 0x7b, 0xd3, 0xaa, 0xce, 0x6f, 0xd9, 0xb2, 0x30, 0xa0, 0xca, 0x17,
	0xca, 0x10, 0x15, 0x1d, 0xdf, 0x07, 0x83, 0x8e, 0x21, 0xd4, 0x75, 0x25, 0xac, 0xfd, 0x3a, 0x85,
	0xe2, 0x6a, 0x91, 0xba, 0x38, 0x6b, 0x5c, 0x89, 0xfe, 0x00, 0xfe, 0x03, 0xfc, 0x2b, 0x7e, 0x12,
	0xb2, 0xe3, 0x34, 0x4e, 0xdc, 0x64, 0x52, 0x80, 0x4f, 0xf1, 0xf9, 0xce, 0x8f, 0x9f, 0x7b, 0x7c,
	0x77, 0x81, 0x3a, 0xf1, 0x9d, 0xae, 0xbf, 0x20, 0x94, 0x20, 0x9d, 0x7f, 0xac, 0x31, 0xec, 0x4e,
	0x5e, 0xf6, 0x1d, 0xea, 0x8c, 0x48, 0x40, 0x6d, 0x7c, 0xb7, 0xc4, 0x01, 0x45, 0x08, 0x2a, 0xbe,
	0x43, 0x6f, 0x0c, 0xad, 0xad, 0x75, 0xea, 0x36, 0x5f, 0xa3, 0x16, 0xe8, 0xae, 0xe7, 0x2f, 0xa9,
	0x51, 0xe2, 0x9b, 0xa1, 0x81, 0xf6, 0x60, 0xcb, 0x5f, 0x60, 0x4a, 0x57, 0x46, 0xb9, 0xad, 0x75,
	0x6a, 0xb6, 0xb0, 0xac, 0x37, 0x80, 0x64, 0xd8, 0xc0, 0x27, 0x5e, 0x80, 0x19, 0xee, 0x94, 0x7c,
	0xc5, 0x1c, 0x57, 0xb7, 0xf9, 0x9a, 0x21, 0x2c, 0x70, 0xb0, 0x9c, 0x47, 0xc0, 0xc2, 0xb2, 0x66,
	0xd0, 0x9c, 0xf4, 0x38, 0xc2, 0x32, 0x97, 0x97, 0x09, 0xb5, 0x29, 0xf1, 0x28, 0xf6, 0x68, 0x20,
	0x10, 0xd6, 0x36, 0xb2, 0x60, 0xc7, 0x9d, 0x5d, 0x7b, 0xc4, 0xc3, 0xd7, 0xb7, 0x0e, 0x9d, 0xde,
	0x70, 0x92, 0x75, 0x7b, 0xdb, 0x9d, 0x0d, 0x89, 0x87, 0x2f, 0xd8, 0x96, 0xf5, 0x14, 0x76, 0xa5,
	0x7b, 0xb2, 0x89, 0x5a, 0x3f, 0xb4, 0x88, 0xd1, 0x39, 0xce, 0x65, 0x14, 0x6b, 0x52, 0x92, 0x35,
	0x41, 0x06, 0x54, 0x6f, 0x31, 0x5d, 0xb8, 0xd3, 0x40, 0x88, 0x15, 0x99, 0xa8, 0x03, 0x55, 0xfc,
	0xcd, 0x9f, 0x3b, 0xae, 0x67, 0x54, 0xda, 0x5a, 0xa7, 0x71, 0xdc, 0x08, 0x1f, 0xa9, 0x7b, 0x16,
	0xee, 0xda, 0x91, 0x3b, 0x7e, 0x05, 0xbd, 0x5d, 0x5e, 0xbf, 0x82, 0xf5, 0x3a, 0xca, 0x81, 0x33,
	0x2b, 0x20, 0xf6, 0x09, 0x20, 0x21, 0x02, 0xd3, 0xe4, 0x9e, 0x32, 0xf0, 0xb9, 0x94, 0xa5, 0x90,
	0x00, 0x37, 0xac, 0x67, 0xf0, 0x7f, 0xe2, 0x7c, 0x8e, 0x8c, 0x3f, 0xb5, 0xb5, 0xe0, 0x7f, 0xb3,
	0xe2, 0x64, 0x75, 0x2b, 0x99, 0xea, 0xea, 0xb9, 0xea, 0xf2, 0xaa, 0xed, 0xfd, 0x51, 0xd5, 0x7e,
	0xe7, 0xd9, 0x7d, 0x5a, 0xe2, 0xc5, 0x4a, 0xaa, 0x92, 0x16, 0xe8, 0x77, 0x6c, 0x4b, 0xa4, 0x17,
	0x1a, 0xff, 0xb2, 0x4e, 0xc2, 0x4c, 0x62, 0x1a, 0x05, 0x32, 0x79, 0x0b, 0xad, 0x49, 0x6f, 0x44,
	0xe6, 0xee, 0xd4, 0xc5, 0xc1, 0x3d, 0x3d, 0xc8, 0x32, 0x61, 0x91, 0xab, 0x08, 0x23, 0xb4, 0xac,
	0x77, 0xf0, 0x20, 0x85, 0x51, 0x80, 0xc8, 0x73, 0x19, 0x64, 0xe0, 0xe6, 0xd6, 0x8c, 0xd5, 0x87,
	0xbd, 0x74, 0x70, 0x81, 0x2b, 0x8f, 0xe4, 0xdc, 0xf3, 0xbb, 0x3d, 0x99, 0x63, 0x51, 0xb1, 0x5f,
	0xc0, 0x7e, 0x0c, 0xd2, 0xc7, 0x73, 0x4c, 0x71, 0xde, 0x9d, 0x5d, 0x30, 0xd4, 0xf0, 0xec, 0x6b,
	0x8f, 0x3a, 0x50, 0x15, 0x15, 0x82, 0x6a, 0x50, 0x19, 0x5e, 0x0e, 0xcf, 0x9a, 0xff, 0xb1, 0xd5,
	0xfb, 0xf1, 0x60, 0xd0, 0xd4, 0x50, 0x1d, 0xf4, 0x2b, 0x7b, 0x7c, 0xf5, 0xa1, 0x59, 0x3a, 0xfe,
	0xa5, 0x43, 0xf9, 0x72, 0x74, 0x8a, 0x4e, 0x01, 0xe2, 0xf9, 0x8d, 0x0c, 0x51, 0x66, 0xca, 0x9f,
	0xc2, 0x3c, 0xd8, 0xe0, 0x11, 0x44, 0x4e, 0xa0, 0xbe, 0x1e, 0xac, 0x68, 0x3f, 0x8a, 0x4b, 0x8d,
	0x74, 0xd3, 0x50, 0x1d, 0xe9, 0xf3, 0xe7, 0x38, 0x7d, 0x3e, 0x7e, 0x92, 0xd4, 0x79, 0x59, 0xff,
	0x3e, 0x6c, 0x4b, 0x33, 0x09, 0x1d, 0x24, 0x2f, 0x92, 0xe6, 0x9c, 0x69, 0x6e, 0x72, 0x09, 0x14,
	0x26, 0x44, 0x4f, 0x15, 0xa2, 0x97, 0x29, 0x84, 0x3a, 0x3f, 0x38, 0x44, 0xd4, 0x8b, 0x12, 0x44,
	0x6a, 0x4a, 0x48, 0x10, 0x4a, 0xe3, 0x7e, 0x84, 0x9d, 0x44, 0x23, 0xa1, 0x87, 0xeb, 0x58, 0xb5,
	0x45, 0xcd, 0xc3, 0xcd, 0x4e, 0x81, 0x75, 0x01, 0x8d, 0x64, 0x8b, 0x20, 0x35, 0x5e, 0x6a, 0x33,
	0xf3, 0x51, 0x86, 0x77, 0x13, 0x35, 0x96, 0xa0, 0x4a, 0x4d, 0xca, 0xf1, 0x70, 0xb3, 0x53, 0x60,
	0x7d, 0x66, 0x7f, 0xd8, 0x64, 0x5d, 0xa3, 0xc7, 0xca, 0x89, 0x44, 0x7f, 0x98, 0x4f, 0x32, 0xfd,
	0x21, 0xe8, 0x97, 0x2d, 0xee, 0x7f, 0xf5, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x93, 0x75, 0xbd, 0xfe,
	0xfc, 0x08, 0x00, 0x00,
}
